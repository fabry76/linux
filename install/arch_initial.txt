##Enable SSH from remote if needed
#Set root password
passwd
#Enable SSH service
systemctl start sshd.service

#Set KB language
loadkeys it.map.gz

#Update the system clock
timedatectl set-ntp true

#View disks and partition
fdisk -l

#Create 3 partitions (NO IF REINSTALLING)
nvme0n1p1 512M	EFI
nvme0n1p2 100G	ROOT
nvme0n1p3 138	HOME

#Format the partition
mkfs.fat -F32 /dev/nvme0n1p1
mkfs.ext4 /dev/nvme0n1p2
mkfs.ext4 /dev/nvme0n1p3 (NO IF REINSTALLING)

#Mount the partitions
mount /dev/nvme0n1p2 /mnt
mkdir -p /mnt/boot/EFI
mount /dev/nvme0n1p1 /mnt/boot/EFI
mkdir /mnt/home
mount /dev/nvme0n1p3 /mnt/home

#Install base system
pacstrap /mnt base base-devel linux linux-firmware nano intel-ucode

#Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

#Change root into the new system:
arch-chroot /mnt /bin/bash

#Set the time zone
ln -sf /usr/share/zoneinfo/Europe/Rome /etc/localtime

#synch hw clock to system clock
hwclock --systohc

#Locale (uncomment US and IT)
nano /etc/locale.gen
locale-gen
nano /etc/locale.conf
(LANG=en_US.UTF-8)

#hostname
nano /etc/hostname

nano /etc/hosts

127.0.0.1	localhost
::1		localhost
127.0.1.1	arco.localdomain	arco

#packages
pacman -S grub efibootmgr networkmanager wireless_tools wpa_supplicant git appstream sof-firmware acpi acpi_call

#Netowrk Manager
systemctl enable NetworkManager

#grub
grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg

#enable root
passwd

#create user
useradd -m -G wheel fabri
passwd fabri
EDITOR=nano visudo "uncomment line %wheel ALL=(ALL) ALL"

#exit and unmount
exit
umount -a
reboot
